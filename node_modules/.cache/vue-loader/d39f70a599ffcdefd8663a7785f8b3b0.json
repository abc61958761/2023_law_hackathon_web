{"remainingRequest":"/Users/carol/Documents/hacker/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/carol/Documents/hacker/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/carol/Documents/hacker/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/carol/Documents/hacker/src/views/Verdicts.vue?vue&type=template&id=0e5216f4&","dependencies":[{"path":"/Users/carol/Documents/hacker/src/views/Verdicts.vue","mtime":1692886154051},{"path":"/Users/carol/Documents/hacker/node_modules/cache-loader/dist/cjs.js","mtime":1617010042632},{"path":"/Users/carol/Documents/hacker/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1617010052190},{"path":"/Users/carol/Documents/hacker/node_modules/cache-loader/dist/cjs.js","mtime":1617010042632},{"path":"/Users/carol/Documents/hacker/node_modules/vue-loader/lib/index.js","mtime":1617010052190}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICB7CiAgICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IiwKICAgICAgc3RhdGljU3R5bGU6IHsgImZsZXgtZGlyZWN0aW9uIjogImNvbHVtbiIsIGZsZXg6ICIxIiB9CiAgICB9LAogICAgWwogICAgICBfYygKICAgICAgICAiZGl2IiwKICAgICAgICB7CiAgICAgICAgICBzdGF0aWNDbGFzczogImQtZmxleCBwYS00IiwKICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IGhlaWdodDogIjU0cHgiLCAiYWxpZ24taXRlbXMiOiAiY2VudGVyIiB9CiAgICAgICAgfSwKICAgICAgICBbCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm1yLTQgZm9udC13ZWlnaHQtbWVkaXVtIiB9LCBbCiAgICAgICAgICAgIF92bS5fdigi5Yik5rG65pu457i96Ka9ICIpCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKCJ2LWRpdmlkZXIiLCB7IHN0YXRpY0NsYXNzOiAibXItNCIsIGF0dHJzOiB7IHZlcnRpY2FsOiAiIiB9IH0pLAogICAgICAgICAgX2MoInYtYnJlYWRjcnVtYnMiLCB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicGEtMCIsCiAgICAgICAgICAgIGF0dHJzOiB7IGl0ZW1zOiBfdm0uYnJlYWRjcnVtYkl0ZW1zIH0sCiAgICAgICAgICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGtleTogImRpdmlkZXIiLAogICAgICAgICAgICAgICAgZm46IGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gW192bS5fdigiIOKAlCAiKV0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBwcm94eTogdHJ1ZQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSkKICAgICAgICAgIH0pLAogICAgICAgICAgX2MoInYtc3BhY2VyIiksCiAgICAgICAgICBfYygKICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYnRuLWJhY2siLAogICAgICAgICAgICAgIGF0dHJzOiB7IGRlcHJlc3NlZDogIiIgfSwKICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLiRyb3V0ZXIuZ28oLTEpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbX3ZtLl92KCLov5Tlm54iKV0KICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJwYS00IGQtZmxleCIsCiAgICAgICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICAgICBiYWNrZ3JvdW5kOiAiI0ZBRkNGRSIsCiAgICAgICAgICAgIG92ZXJmbG93OiAic2Nyb2xsIiwKICAgICAgICAgICAgZmxleDogIjEiLAogICAgICAgICAgICAiZmxleC1kaXJlY3Rpb24iOiAiY29sdW1uIgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgWwogICAgICAgICAgX2MoImgyIiwgeyBzdGF0aWNDbGFzczogIm1iLTQiIH0sIFtfdm0uX3YoIuWIpOaxuuabuOe4veimvSIpXSksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInB4LTggcHktNSBtYi00IiwKICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyAiYm9yZGVyLXJhZGl1cyI6ICIxMnB4IiwgYmFja2dyb3VuZDogIiNmZmZmZmYiIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF92bS5fbSgwKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImQtZmxleCBhbGlnbi1jZW50ZXIgbWItNCBqdXN0aWZ5LXNwYWNlLWJldHdlZW4iCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImQtZmxleCBhbGlnbi1jZW50ZXIgcGEtNCBtci0yIiwKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAiNTAlIiwKICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAiMXB4IHNvbGlkICNFNEU2RUYiLAogICAgICAgICAgICAgICAgICAgICAgICAiYm9yZGVyLXJhZGl1cyI6ICI0cHgiCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImQtZmxleCBqdXN0aWZ5LWNlbnRlciIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgd2lkdGg6ICI1MCUiIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInYtcHJvZ3Jlc3MtY2lyY3VsYXIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdGF0ZTogLTkwLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU6IDEwMCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICIzMCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICJ0ZWFsIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiIDMwICIpXQogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgIF92bS5fbSgxKQogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJkLWZsZXggYWxpZ24tY2VudGVyIHBhLTQgbWwtMiIsCiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogIjUwJSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcjogIjFweCBzb2xpZCAjRTRFNkVGIiwKICAgICAgICAgICAgICAgICAgICAgICAgImJvcmRlci1yYWRpdXMiOiAiNHB4IgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJkLWZsZXgganVzdGlmeS1jZW50ZXIiLAogICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IHdpZHRoOiAiNTAlIiB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2LXByb2dyZXNzLWNpcmN1bGFyIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3RhdGU6IC05MCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplOiAxMDAsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDE1LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAiMzAiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAiI0ZGQ0M2NyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIiAzMCAiKV0KICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX20oMikKICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0KICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInB4LTggcHktNSIsCiAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgImJvcmRlci1yYWRpdXMiOiAiMTJweCIsIGJhY2tncm91bmQ6ICIjZmZmZmZmIiB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImQtZmxleCBtYi00IiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygiaDMiLCBbX3ZtLl92KCLliJfooagiKV0pLAogICAgICAgICAgICAgICAgICBfYygidi1zcGFjZXIiKSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiYnRuLWRlcHJlc3NlZCIsIGF0dHJzOiB7IGRlcHJlc3NlZDogIiIgfSB9LAogICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIuWMr+WHukV4Y2Vs6KGo5ZauIildCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImQtZmxleCBhbGlnbi1jZW50ZXIgcGEtNCBtYi00IiwKICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgYmFja2dyb3VuZDogIiNGNUY4RkEiLCAiYm9yZGVyLXJhZGl1cyI6ICI0cHgiIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogImZvbnQtd2VpZ2h0LW1lZGl1bSBtci00IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCLpl5zpjbXlrZciKQogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgX2MoInYtdGV4dC1maWVsZCIsIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1yLTQiLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogIuiri+i8uOWFpeWIpOaxuuabuOWQjeeosSIsCiAgICAgICAgICAgICAgICAgICAgICBvdXRsaW5lZDogIiIsCiAgICAgICAgICAgICAgICAgICAgICBkZW5zZTogIiIsCiAgICAgICAgICAgICAgICAgICAgICAiaGlkZS1kZXRhaWxzIjogInRydWUiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgX2MoInYtc3BhY2VyIiksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtci00IGJ0bi1kZXByZXNzZWQiLAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgZGVwcmVzc2VkOiAiIiB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCLmkJzlsIsiKV0KICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiYnRuLW91dGxpbmVkIiwgYXR0cnM6IHsgb3V0bGluZWQ6ICIiIH0gfSwKICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCLmuIXpmaQiKV0KICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJ2LXN3aXRjaCIsIHsKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICIjODFDODI4IiwKICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAi5YOF6aGv56S644CM5bey5qqi5p+l44CN5LmL5Yik5rG65pu4IgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygidi1kYXRhLXRhYmxlIiwgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJlbGV2YXRpb24tMCBwcm9qZWN0X3RhYmxlIiwKICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IF92bS5oZWFkZXJzLAogICAgICAgICAgICAgICAgICBpdGVtczogX3ZtLmRlc3NlcnRzLAogICAgICAgICAgICAgICAgICBwYWdlOiBfdm0ucGFnZSwKICAgICAgICAgICAgICAgICAgImhpZGUtZGVmYXVsdC1mb290ZXIiOiAiIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICJ1cGRhdGU6cGFnZSI6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgIF92bS5wYWdlID0gJGV2ZW50CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICJwYWdlLWNvdW50IjogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgX3ZtLnBhZ2VDb3VudCA9ICRldmVudAogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgc2NvcGVkU2xvdHM6IF92bS5fdShbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBrZXk6ICJpdGVtLnNjaGVkdWxlIiwKICAgICAgICAgICAgICAgICAgICBmbjogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWwogICAgICAgICAgICAgICAgICAgICAgICBfYygidi1wcm9ncmVzcy1saW5lYXIiLCB7IGF0dHJzOiB7IHZhbHVlOiAiMTUiIH0gfSkKICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHByb3h5OiB0cnVlCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBrZXk6ICJpdGVtLmNoZWNrIiwKICAgICAgICAgICAgICAgICAgICBmbjogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWwogICAgICAgICAgICAgICAgICAgICAgICBfYygidi1pY29uIiwgeyBhdHRyczogeyBjb2xvcjogIiM1MENEODkiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigibWRpLWNoZWNrIikKICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHByb3h5OiB0cnVlCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBrZXk6ICJpdGVtLm5hbWUiLAogICAgICAgICAgICAgICAgICAgIGZuOiBmdW5jdGlvbihyZWYpIHsKICAgICAgICAgICAgICAgICAgICAgIHZhciBpdGVtID0gcmVmLml0ZW0KICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdG86ICIvIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmF0aXZlT246IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uZ29WZXJkaWN0RGV0YWlsKGl0ZW0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoX3ZtLl9zKGl0ZW0ubmFtZSkpXQogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAga2V5OiAiaXRlbS5kZWxldGUiLAogICAgICAgICAgICAgICAgICAgIGZuOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJteC0xIHBhLTAgYnRuLWljb25fX3RyYXNoIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNtYWxsOiAiIiwgZGVwcmVzc2VkOiAiIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5kZWxldGVJdGVtID0gdHJ1ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygidi1pY29uIiwgeyBhdHRyczogeyBkYXJrOiAiIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgbWRpLXRyYXNoLWNhbiAiKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgcHJveHk6IHRydWUKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImQtZmxleCBtdC00IGFsaWduLWNlbnRlciIgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCJTaG93aW5nIDEgdG8gMTAgb2YgNTAgZW50cmllcyIpXSksCiAgICAgICAgICAgICAgICAgIF9jKCJ2LXNwYWNlciIpLAogICAgICAgICAgICAgICAgICBfYygidi1wYWdpbmF0aW9uIiwgewogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGNvbG9yOiAiIzUzQkJCMiIsIGxlbmd0aDogX3ZtLnBhZ2VDb3VudCB9LAogICAgICAgICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnBhZ2UsCiAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5wYWdlID0gJCR2CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInBhZ2UiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdCiAgICAgICkKICAgIF0KICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFsKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZC1mbGV4IGFsaWduLWNlbnRlciBtYi00IiB9LCBbCiAgICAgIF9jKCJoMyIsIHsgc3RhdGljQ2xhc3M6ICJtci00ICIgfSwgW192bS5fdigi5qiZ6KiY54uA5rOBIildKSwKICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCLliKTmsbrmm7jnuL3mlbjvvJoyMDAiKV0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNTdHlsZTogeyB3aWR0aDogIjUwJSIgfSB9LCBbCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZC1mbGV4IGFsaWduLWNlbnRlciIgfSwgWwogICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogIm1yLTQiLCBzdGF0aWNTdHlsZTogeyBjb2xvcjogIiM1RTYyNzgiIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCLlrozmiJDnjociKQogICAgICAgIF0pLAogICAgICAgIF9jKCJoMSIsIFtfdm0uX3YoIjI1JSIpXSkKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCBbCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJkLWZsZXggYWxpZ24tY2VudGVyIiB9LCBbCiAgICAgICAgICBfYygiZGl2IiwgewogICAgICAgICAgICBzdGF0aWNDbGFzczogIm1yLTIiLAogICAgICAgICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICAgICAgIGhlaWdodDogIjNweCIsCiAgICAgICAgICAgICAgd2lkdGg6ICIxMHB4IiwKICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAiIzYyOTFGNCIsCiAgICAgICAgICAgICAgImJvcmRlci1yYWRpdXMiOiAiMTBweCIKICAgICAgICAgICAgfQogICAgICAgICAgfSksCiAgICAgICAgICBfYygKICAgICAgICAgICAgInNwYW4iLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAibXItNCIsIHN0YXRpY1N0eWxlOiB7IGNvbG9yOiAiI0I1QjVDMyIgfSB9LAogICAgICAgICAgICBbX3ZtLl92KCLlt7LlrozmiJAiKV0KICAgICAgICAgICksCiAgICAgICAgICBfYygiaDIiLCB7IHN0YXRpY1N0eWxlOiB7IGNvbG9yOiAiIzVFNjI3OCIgfSB9LCBbX3ZtLl92KCI1MCIpXSkKICAgICAgICBdKSwKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImQtZmxleCBhbGlnbi1jZW50ZXIiIH0sIFsKICAgICAgICAgIF9jKCJkaXYiLCB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibXItMiIsCiAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgaGVpZ2h0OiAiM3B4IiwKICAgICAgICAgICAgICB3aWR0aDogIjEwcHgiLAogICAgICAgICAgICAgIGJhY2tncm91bmQ6ICIjRTRFNkVGIiwKICAgICAgICAgICAgICAiYm9yZGVyLXJhZGl1cyI6ICIxMHB4IgogICAgICAgICAgICB9CiAgICAgICAgICB9KSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAic3BhbiIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJtci00Iiwgc3RhdGljU3R5bGU6IHsgY29sb3I6ICIjQjVCNUMzIiB9IH0sCiAgICAgICAgICAgIFtfdm0uX3YoIuacquWujOaIkCIpXQogICAgICAgICAgKSwKICAgICAgICAgIF9jKCJoMiIsIHsgc3RhdGljU3R5bGU6IHsgY29sb3I6ICIjNUU2Mjc4IiB9IH0sIFtfdm0uX3YoIjE1MCIpXSkKICAgICAgICBdKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljU3R5bGU6IHsgd2lkdGg6ICI1MCUiIH0gfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImQtZmxleCBhbGlnbi1jZW50ZXIiIH0sIFsKICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJtci00Iiwgc3RhdGljU3R5bGU6IHsgY29sb3I6ICIjNUU2Mjc4IiB9IH0sIFsKICAgICAgICAgIF92bS5fdigi5a6M5oiQ546HIikKICAgICAgICBdKSwKICAgICAgICBfYygiaDEiLCBbX3ZtLl92KCIyNSUiKV0pCiAgICAgIF0pLAogICAgICBfYygiZGl2IiwgWwogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZC1mbGV4IGFsaWduLWNlbnRlciIgfSwgWwogICAgICAgICAgX2MoImRpdiIsIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtci0yIiwKICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAgICAgICBoZWlnaHQ6ICIzcHgiLAogICAgICAgICAgICAgIHdpZHRoOiAiMTBweCIsCiAgICAgICAgICAgICAgYmFja2dyb3VuZDogIiNGRkNDNjciLAogICAgICAgICAgICAgICJib3JkZXItcmFkaXVzIjogIjEwcHgiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJzcGFuIiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogIm1yLTQiLCBzdGF0aWNTdHlsZTogeyBjb2xvcjogIiNCNUI1QzMiIH0gfSwKICAgICAgICAgICAgW192bS5fdigi5bey5a6M5oiQIildCiAgICAgICAgICApLAogICAgICAgICAgX2MoImgyIiwgeyBzdGF0aWNTdHlsZTogeyBjb2xvcjogIiM1RTYyNzgiIH0gfSwgW192bS5fdigiNTAiKV0pCiAgICAgICAgXSksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJkLWZsZXggYWxpZ24tY2VudGVyIiB9LCBbCiAgICAgICAgICBfYygiZGl2IiwgewogICAgICAgICAgICBzdGF0aWNDbGFzczogIm1yLTIiLAogICAgICAgICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICAgICAgIGhlaWdodDogIjNweCIsCiAgICAgICAgICAgICAgd2lkdGg6ICIxMHB4IiwKICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAiI0U0RTZFRiIsCiAgICAgICAgICAgICAgImJvcmRlci1yYWRpdXMiOiAiMTBweCIKICAgICAgICAgICAgfQogICAgICAgICAgfSksCiAgICAgICAgICBfYygKICAgICAgICAgICAgInNwYW4iLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAibXItNCIsIHN0YXRpY1N0eWxlOiB7IGNvbG9yOiAiI0I1QjVDMyIgfSB9LAogICAgICAgICAgICBbX3ZtLl92KCLmnKrlrozmiJAiKV0KICAgICAgICAgICksCiAgICAgICAgICBfYygiaDIiLCB7IHN0YXRpY1N0eWxlOiB7IGNvbG9yOiAiIzVFNjI3OCIgfSB9LCBbX3ZtLl92KCIxNTAiKV0pCiAgICAgICAgXSkKICAgICAgXSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}