{"remainingRequest":"/Users/carol/Documents/2023_law_hackathon_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/carol/Documents/2023_law_hackathon_web/src/views/Verdicts.vue?vue&type=template&id=582e29a4&","dependencies":[{"path":"/Users/carol/Documents/2023_law_hackathon_web/src/views/Verdicts.vue","mtime":1692886154051},{"path":"/Users/carol/Documents/2023_law_hackathon_web/node_modules/cache-loader/dist/cjs.js","mtime":1617010042632},{"path":"/Users/carol/Documents/2023_law_hackathon_web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1617010052190},{"path":"/Users/carol/Documents/2023_law_hackathon_web/node_modules/cache-loader/dist/cjs.js","mtime":1617010042632},{"path":"/Users/carol/Documents/2023_law_hackathon_web/node_modules/vue-loader/lib/index.js","mtime":1617010052190}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}