{"remainingRequest":"/Users/carol/Documents/hacker/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/carol/Documents/hacker/src/views/ProjectDetail.vue?vue&type=template&id=7040ac00&","dependencies":[{"path":"/Users/carol/Documents/hacker/src/views/ProjectDetail.vue","mtime":1692932363465},{"path":"/Users/carol/Documents/hacker/node_modules/cache-loader/dist/cjs.js","mtime":1617010042632},{"path":"/Users/carol/Documents/hacker/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1617010052190},{"path":"/Users/carol/Documents/hacker/node_modules/cache-loader/dist/cjs.js","mtime":1617010042632},{"path":"/Users/carol/Documents/hacker/node_modules/vue-loader/lib/index.js","mtime":1617010052190}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}