{"remainingRequest":"/Users/carol/Documents/hacker/node_modules/babel-loader/lib/index.js!/Users/carol/Documents/hacker/node_modules/eslint-loader/index.js??ref--13-0!/Users/carol/Documents/hacker/src/store/modules/faceMask.js","dependencies":[{"path":"/Users/carol/Documents/hacker/src/store/modules/faceMask.js","mtime":1618810258977},{"path":"/Users/carol/Documents/hacker/node_modules/cache-loader/dist/cjs.js","mtime":1617010042632},{"path":"/Users/carol/Documents/hacker/node_modules/babel-loader/lib/index.js","mtime":1617010042638},{"path":"/Users/carol/Documents/hacker/node_modules/eslint-loader/index.js","mtime":1617010050096}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9jYXJvbC9Eb2N1bWVudHMvaGFja2VyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvY2Fyb2wvRG9jdW1lbnRzL2hhY2tlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKdmFyIGZhY2VNYXNrID0gewogIHN0YXRlOiB7CiAgICBjb3VudDogMCwKICAgIGZhY2VNYXNrczogW10KICB9LAogIG11dGF0aW9uczogewogICAgaW5jcmVtZW50OiBmdW5jdGlvbiBpbmNyZW1lbnQoc3RhdGUpIHsKICAgICAgc3RhdGUuY291bnQrKzsKICAgIH0sCiAgICB1cGRhdGVGYWNlTWFza3M6IGZ1bmN0aW9uIHVwZGF0ZUZhY2VNYXNrcyhzdGF0ZSwgcGF5bG9hZCkgewogICAgICB2YXIgX3N0YXRlJGZhY2VNYXNrczsKCiAgICAgIChfc3RhdGUkZmFjZU1hc2tzID0gc3RhdGUuZmFjZU1hc2tzKS5wdXNoLmFwcGx5KF9zdGF0ZSRmYWNlTWFza3MsIF90b0NvbnN1bWFibGVBcnJheShwYXlsb2FkKSk7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBxdWVyeUZhY2VNYXNrczogZnVuY3Rpb24gcXVlcnlGYWNlTWFza3MoX3JlZikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjb21taXQsIHJlc3BvbnNlLCBmYWNlTWFza3M7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcygnaHR0cHM6Ly9maW5kbWFza3MuaGVyb2t1YXBwLmNvbS9wbGFjZXMnKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgZmFjZU1hc2tzID0gcmVzcG9uc2UuZGF0YS5mZWF0dXJlcy5zbGljZSgwLCAxMCk7CiAgICAgICAgICAgICAgICBjb21taXQoJ3VwZGF0ZUZhY2VNYXNrcycsIGZhY2VNYXNrcyk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIGdldHRlcnM6IHsKICAgIGZhY2VNYXNrczogZnVuY3Rpb24gZmFjZU1hc2tzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5mYWNlTWFza3M7CiAgICB9CiAgfQp9OwpleHBvcnQgZGVmYXVsdCBmYWNlTWFzazs="},{"version":3,"sources":["/Users/carol/Documents/hacker/src/store/modules/faceMask.js"],"names":["axios","faceMask","state","count","faceMasks","mutations","increment","updateFaceMasks","payload","push","actions","queryFaceMasks","commit","response","data","features","slice","getters"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,QAAQ,GAAG;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,CADF;AAELC,IAAAA,SAAS,EAAE;AAFN,GADM;AAKbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SADS,qBACCJ,KADD,EACQ;AACfA,MAAAA,KAAK,CAACC,KAAN;AACD,KAHQ;AAITI,IAAAA,eAJS,2BAIOL,KAJP,EAIcM,OAJd,EAIuB;AAAA;;AAC9B,0BAAAN,KAAK,CAACE,SAAN,EAAgBK,IAAhB,4CAAwBD,OAAxB;AACD;AANQ,GALE;AAabE,EAAAA,OAAO,EAAE;AACDC,IAAAA,cADC,gCAC0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVC,gBAAAA,MAAU,QAAVA,MAAU;AAAA;AAAA,uBACRZ,KAAK,CAAC,wCAAD,CADG;;AAAA;AACzBa,gBAAAA,QADyB;AAEzBT,gBAAAA,SAFyB,GAEbS,QAAQ,CAACC,IAAT,CAAcC,QAAd,CAAuBC,KAAvB,CAA6B,CAA7B,EAAgC,EAAhC,CAFa;AAI/BJ,gBAAAA,MAAM,CAAC,iBAAD,EAAoBR,SAApB,CAAN;;AAJ+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKhC;AANM,GAbI;AAsBba,EAAAA,OAAO,EAAE;AACPb,IAAAA,SADO,qBACGF,KADH,EACU;AACf,aAAOA,KAAK,CAACE,SAAb;AACD;AAHM;AAtBI,CAAjB;AA6BE,eAAeH,QAAf","sourcesContent":["import axios from \"axios\";\n\nconst faceMask = {\n    state: {\n      count: 0,\n      faceMasks: []\n    },\n    mutations: {\n      increment(state) {\n        state.count++;\n      },\n      updateFaceMasks(state, payload) {\n        state.faceMasks.push(...payload);\n      }\n    },\n    actions: {\n      async queryFaceMasks({ commit }) {\n        const response = await axios('https://findmasks.herokuapp.com/places');\n        const faceMasks = response.data.features.slice(0, 10);\n  \n        commit('updateFaceMasks', faceMasks)\n      },\n      \n    },\n    getters: {\n      faceMasks(state) {\n        return state.faceMasks;\n      }\n    }\n  };\n\n  export default faceMask;\n"]}]}