{"remainingRequest":"/Users/carol/Documents/ptcg_account_web/node_modules/babel-loader/lib/index.js!/Users/carol/Documents/ptcg_account_web/node_modules/eslint-loader/index.js??ref--13-0!/Users/carol/Documents/ptcg_account_web/src/store/modules/account.js","dependencies":[{"path":"/Users/carol/Documents/ptcg_account_web/src/store/modules/account.js","mtime":1623228089655},{"path":"/Users/carol/Documents/ptcg_account_web/node_modules/cache-loader/dist/cjs.js","mtime":1617010042632},{"path":"/Users/carol/Documents/ptcg_account_web/node_modules/babel-loader/lib/index.js","mtime":1617010042638},{"path":"/Users/carol/Documents/ptcg_account_web/node_modules/eslint-loader/index.js","mtime":1617010050096}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/carol/Documents/ptcg_account_web/src/store/modules/account.js"],"names":["accounts","account","state","purchaseRecords","inventories","soldRecords","pokemons","settlements","settlementDetail","mutations","updatePurchaseRecords","payload","updateInventories","updateSoldRecords","updatePokemons","updateSettlements","updateSettlementDetail","actions","queryPurchaseRecords","commit","response","data","map","item","isDelete","queryInventories","params","pokemon","isEdit","querySoldRecords","queryPokemons","createPokemon","newPokemon","dispatch","createPokemons","newPokemons","name","updatePokemon","id","searchPokemon","createPurchaseRecord","newPurchaseRecord","createSoldRecord","newSoldRecord","deletePurchaseRecords","deletePurchaseRecordIds","deleteSoldRecords","deleteSoldRecordIds","updateSettlement","querySettlements","queryUnSettlements","unsettlementRes","settlementsRes","unsettlements","Object","values","status","year","month","purchase","carol_purchase_price","chad_purchase_price","sold","carol_sold_price","chad_sold_price","getSettlementDetail","splitSold","splitPurchase","splitSolds","date","splitPurchases","getters"],"mappings":"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","sourcesContent":["import accounts from \"../../api/account\";\n\nconst account = {\n  state: {\n    purchaseRecords: [],\n    inventories: [],\n    soldRecords: [],\n    pokemons: [],\n    settlements: [],\n    settlementDetail: {},\n  },\n  mutations: {\n    updatePurchaseRecords(state, payload) {\n      state.purchaseRecords = payload;\n    },\n    updateInventories(state, payload) {\n      state.inventories = payload;\n    },\n    updateSoldRecords(state, payload) {\n      state.soldRecords = payload;\n    },\n    updatePokemons(state, payload) {\n      state.pokemons = payload;\n    },\n    updateSettlements(state, payload) {\n      state.settlements = payload;\n    },\n    updateSettlementDetail(state, payload) {\n      state.settlementDetail = payload;\n    },\n  },\n  actions: {\n    async queryPurchaseRecords({ commit }) {\n      const response = await accounts.queryPurchaseRecords();\n\n      commit(\n        \"updatePurchaseRecords\",\n        response.data.data.map((item) => {\n          return { ...item, isDelete: false };\n        })\n      );\n    },\n    async queryInventories({ commit }, params) {\n      const response = await accounts.queryInventories(params);\n\n      commit(\n        \"updateInventories\",\n        response.data.data.map((item) => {\n          item.pokemon = {\n            ...item.pokemon,\n            isEdit: false,\n          };\n          return item;\n        })\n      );\n    },\n    async querySoldRecords({ commit }) {\n      const response = await accounts.querySoldRecords();\n\n      commit(\n        \"updateSoldRecords\",\n        response.data.data.map((item) => {\n          return { ...item, isDelete: false };\n        })\n      );\n    },\n    async queryPokemons({ commit }, params) {\n      const response = await accounts.queryPokemons(params);\n\n      commit(\"updatePokemons\", response.data.data);\n    },\n    async createPokemon({ dispatch }, newPokemon) {\n      await accounts.createPokemon(newPokemon);\n      await dispatch(\"queryInventories\");\n    },\n    async createPokemons({ dispatch }, params) {\n      const response = await accounts.createPokemons(params.newPokemons);\n      await dispatch(\"queryInventories\", { name: params.name });\n\n      return response;\n    },\n    async updatePokemon({ dispatch }, params) {\n      await accounts.updatePokemon(params.id, params);\n      await dispatch(\"queryInventories\", { name: params.searchPokemon });\n    },\n    async createPurchaseRecord({ dispatch }, newPurchaseRecord) {\n      const response = await accounts.createPurchaseRecord(newPurchaseRecord);\n      await dispatch(\"queryPurchaseRecords\");\n      // await dispatch(\"queryInventories\");\n\n      return response;\n    },\n    async createSoldRecord({ dispatch }, newSoldRecord) {\n      const response = await accounts.createSoldRecord(newSoldRecord);\n      await dispatch(\"querySoldRecords\");\n      // await dispatch(\"queryInventories\");\n\n      return response;\n    },\n    async deletePurchaseRecords({ dispatch }, deletePurchaseRecordIds) {\n      await accounts.deletePurchaseRecords(deletePurchaseRecordIds);\n      await dispatch(\"queryPurchaseRecords\");\n      await dispatch(\"queryInventories\");\n    },\n    async deleteSoldRecords({ dispatch }, deleteSoldRecordIds) {\n      await accounts.deleteSoldRecords(deleteSoldRecordIds);\n      await dispatch(\"querySoldRecords\");\n      await dispatch(\"queryInventories\");\n    },\n    async updateSettlement({ dispatch }, params) {\n      await accounts.updateSettlement(params);\n      await dispatch(\"querySettlements\");\n    },\n    async querySettlements({ commit }) {\n      const unsettlementRes = await accounts.queryUnSettlements();\n      const settlementsRes = await accounts.querySettlements();\n\n      const unsettlements = Object.values(unsettlementRes.data.data).map(\n        (item) => {\n          return {\n            ...item,\n            status: \"unsettlement\",\n          };\n        }\n      );\n      const settlements = settlementsRes.data.data.map((item) => {\n        return {\n          year: item.year,\n          month: item.month,\n          status: \"settlemented\",\n          purchase: item.carol_purchase_price + item.chad_purchase_price,\n          sold: item.carol_sold_price + item.chad_sold_price,\n        };\n      });\n\n      commit(\"updateSettlements\", [...unsettlements, ...settlements]);\n    },\n    async getSettlementDetail({ commit }, params) {\n      const response = await accounts.getSettlementDetail(params);\n\n      commit(\"updateSettlementDetail\", response.data);\n    },\n    async splitSold({ dispatch }, { year, month, id }) {\n      await accounts.splitSold(id);\n      await dispatch(\"getSettlementDetail\", { year, month });\n    },\n    async splitPurchase({ dispatch }, { year, month, id }) {\n      await accounts.splitPurchase(id);\n      await dispatch(\"getSettlementDetail\", { year, month });\n    },\n    async splitSolds({ dispatch }, date) {\n      await accounts.splitSolds(date);\n      await dispatch(\"getSettlementDetail\", date);\n    },\n    async splitPurchases({ dispatch }, date) {\n      await accounts.splitPurchases(date);\n      await dispatch(\"getSettlementDetail\", date);\n    },\n  },\n  getters: {\n    purchaseRecords(state) {\n      return state.purchaseRecords;\n    },\n    inventories(state) {\n      return state.inventories;\n    },\n    soldRecords(state) {\n      return state.soldRecords;\n    },\n    pokemons(state) {\n      return state.pokemons;\n    },\n    settlements(state) {\n      return state.settlements;\n    },\n    settlementDetail(state) {\n      return state.settlementDetail;\n    },\n  },\n};\n\nexport default account;\n"]}]}