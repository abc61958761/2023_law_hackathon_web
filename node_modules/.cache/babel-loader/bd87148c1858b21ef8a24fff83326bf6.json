{"remainingRequest":"/Users/carol/Documents/ptcg_account_web/node_modules/babel-loader/lib/index.js!/Users/carol/Documents/ptcg_account_web/node_modules/eslint-loader/index.js??ref--13-0!/Users/carol/Documents/ptcg_account_web/src/store/modules/account.js","dependencies":[{"path":"/Users/carol/Documents/ptcg_account_web/src/store/modules/account.js","mtime":1618995600181},{"path":"/Users/carol/Documents/ptcg_account_web/node_modules/cache-loader/dist/cjs.js","mtime":1617010042632},{"path":"/Users/carol/Documents/ptcg_account_web/node_modules/babel-loader/lib/index.js","mtime":1617010042638},{"path":"/Users/carol/Documents/ptcg_account_web/node_modules/eslint-loader/index.js","mtime":1617010050096}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/carol/Documents/ptcg_account_web/src/store/modules/account.js"],"names":["accounts","account","state","purchaseRecords","inventories","soldRecords","pokemons","mutations","updatePurchaseRecords","payload","updateInventories","updateSoldRecords","updatePokemons","actions","queryPurchaseRecords","commit","response","data","queryInventories","querySoldRecords","queryPokemons","params","map","pokemon","isEdit","createPokemon","newPokemon","dispatch","updatePokemon","id","createPurchaseRecord","newPurchaseRecord","createSoldRecord","newSoldRecord","getters"],"mappings":"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","sourcesContent":["import accounts from \"../../api/account\";\n\nconst account = {\n  state: {\n    purchaseRecords: [],\n    inventories: [],\n    soldRecords: [],\n    pokemons: [],\n  },\n  mutations: {\n    updatePurchaseRecords(state, payload) {\n      state.purchaseRecords = payload;\n    },\n    updateInventories(state, payload) {\n      state.inventories = payload;\n    },\n    updateSoldRecords(state, payload) {\n      state.soldRecords = payload;\n    },\n    updatePokemons(state, payload) {\n      state.pokemons = payload;\n    },\n  },\n  actions: {\n    async queryPurchaseRecords({ commit }) {\n      const response = await accounts.queryPurchaseRecords();\n\n      commit(\"updatePurchaseRecords\", response.data.data);\n    },\n    async queryInventories({ commit }) {\n      const response = await accounts.queryInventories();\n\n      commit(\"updateInventories\", response.data.data);\n    },\n    async querySoldRecords({ commit }) {\n      const response = await accounts.querySoldRecords();\n\n      commit(\"updateSoldRecords\", response.data.data);\n    },\n    async queryPokemons({ commit }, params) {\n      const response = await accounts.queryPokemons(params);\n\n      commit(\n        \"updatePokemons\",\n        response.data.data.map((pokemon) => {\n          return { ...pokemon, isEdit: false };\n        })\n      );\n    },\n    async createPokemon({ dispatch }, newPokemon) {\n      await accounts.createPokemon(newPokemon);\n      await dispatch(\"queryPokemons\");\n      await dispatch(\"queryInventories\");\n    },\n    async updatePokemon({ dispatch }, params) {\n        await accounts.updatePokemon(params.id, params);\n        await dispatch(\"queryPokemons\");\n    },\n    async createPurchaseRecord({ dispatch }, newPurchaseRecord) {\n      await accounts.createPurchaseRecord(newPurchaseRecord);\n      await dispatch(\"queryPurchaseRecords\");\n      await dispatch(\"queryInventories\");\n    },\n    async createSoldRecord({ dispatch }, newSoldRecord) {\n      await accounts.createSoldRecord(newSoldRecord);\n      await dispatch(\"querySoldRecords\");\n      await dispatch(\"queryInventories\");\n    },\n  },\n  getters: {\n    purchaseRecords(state) {\n      return state.purchaseRecords;\n    },\n    inventories(state) {\n      return state.inventories;\n    },\n    soldRecords(state) {\n      return state.soldRecords;\n    },\n    pokemons(state) {\n      return state.pokemons;\n    },\n  },\n};\n\nexport default account;\n"]}]}